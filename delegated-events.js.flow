/* @flow strict */
/* eslint-disable no-unused-vars, no-undef */

// We need to create the `BaseDelegated*Event` types to `any` out the `currentTarget` and `target`
declare class BaseDelegatedEvent extends Event {
  currentTarget: any;
  target: any;
}

// The `Delegated*Event` types extend from their respective `BaseDelegated*Event` types,
// but set `currentTarget` and `target` back to sensible values
declare class DelegatedEvent extends BaseDelegatedEvent {
  currentTarget: Element;
  target: Element;
}

declare type DelegateEventCall = (
  name: string,
  selector: string,
  handler: (event: DelegatedEvent) => mixed,
  options?: EventListenerOptionsOrUseCapture
) => void;

declare module.exports: {
  on: DelegateEventCall,
  off: DelegateEventCall,
  fire(target: EventTarget, name: string, detail?: any): void
};
